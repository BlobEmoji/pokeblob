# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  "ci-stretch":
    docker:
      - image: circleci/node:9.6.1-stretch

      - image: circleci/postgres:latest
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: ""

    working_directory: ~/repo

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}-stretch

      - run:
          name: install dependencies
          command: |
            npm install mocha
            npm install nyc
            npm install
          no_output_timeout: 60s
          environment:
            POKEBLOB_TEST_ONLY: true

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}-stretch

      - run:
          name: install psql
          command: |
            sudo apt update
            sudo apt install postgresql-client

      - run:
          name: apply schema
          command: |
            psql < schema.sql
            psql < setup.sql
          environment:
            PGHOST: localhost
            PGPORT: 5432
            PGUSER: postgres
            PGDATABASE: postgres

      - run:
          name: copy config file
          command: cp config.example.yml config.yml

      # run tests!
      - run:
          name: faux start bot
          command: bash .docker/startloop.sh
          no_output_timeout: 20s
          environment:
            POKEBLOB_TEST_ONLY: true
            PGHOST: localhost
            PGPORT: 5432
            PGUSER: postgres
            PGDATABASE: postgres

      - run:
          name: do mocha tests
          command: |
            ./node_modules/.bin/nyc ./node_modules/.bin/mocha --delay
          no_output_timeout: 120s
          environment:
            POKEBLOB_TEST_ONLY: true
            PGHOST: localhost
            PGPORT: 5432
            PGUSER: postgres
            PGDATABASE: postgres

  "alpine":
    docker:
      - image: node:9-alpine

      - image: postgres:10-alpine
        environment:
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_PASSWORD: ""

    working_directory: ~/repo

    steps:
      - run:
          name: circleci compatibility
          command: |
            apk update
            apk add bash gettext git
            apk add openssh-client gzip tar
            apk add ca-certificates && update-ca-certificates

      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}-alpine

      - run:
          name: install dependencies
          command: |
            npm install mocha
            npm install nyc
            npm install
          no_output_timeout: 60s
          environment:
            POKEBLOB_TEST_ONLY: true

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}-alpine

      - run:
          name: install psql
          command: |
            apk add postgresql-client

      - run:
          name: apply schema
          command: |
            psql < schema.sql
            psql < setup.sql
          environment:
            PGHOST: localhost
            PGPORT: 5432
            PGUSER: postgres
            PGDATABASE: postgres

      - run:
          name: copy config file
          command: cp config.example.yml config.yml

      # run tests!
      - run:
          name: faux start bot
          command: bash .docker/startloop.sh
          no_output_timeout: 20s
          environment:
            POKEBLOB_TEST_ONLY: true
            PGHOST: localhost
            PGPORT: 5432
            PGUSER: postgres
            PGDATABASE: postgres

      - run:
          name: do mocha tests
          command: |
            ./node_modules/.bin/nyc ./node_modules/.bin/mocha --delay
          no_output_timeout: 120s
          environment:
            POKEBLOB_TEST_ONLY: true
            PGHOST: localhost
            PGPORT: 5432
            PGUSER: postgres
            PGDATABASE: postgres

  "eslint":
    docker:
      - image: node:9-alpine

    working_directory: ~/repo

    steps:
      - run:
          name: circleci compatibility
          command: |
            apk update
            apk add bash gettext git
            apk add openssh-client gzip tar
            apk add ca-certificates && update-ca-certificates

      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "package.json" }}-eslint

      - run:
          name: install eslint
          command: |
            npm install eslint --save-dev
            echo "running eslint NOW"
            ./node_modules/.bin/eslint -v
            ./node_modules/.bin/eslint .
          no_output_timeout: 45s

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}-eslint

workflows:
  version: 2
  build:
    jobs:
      - "ci-stretch"
      - "alpine"
      - "eslint"
