
meta:
  # name of the bot. appears in embed footers, etc
  # don't translate this, or do, i don't mind
  pokeblobs: |
    PokéBlobs

  help:
    no_category: |
      No Category
    command_header: |
      Command List

    categories:
      admin: |
        Administration
      meta: |
        Meta
      pokeblobs: |
        PokéBlobs

    commands:
      # help strings for various commands
      help: |
        Displays commands available to you.
      meta: |
        Displays info on the bot's current status.
      eval: |
        Executes arbitrary JS code.
      ping: |
        Calculates the bot connection round-trip time.
      locale: |
        Changes the bot locale.

      look: |
        Look around your current location.
      roam: |
        Start roaming the world.
      stay: |
        Stop roaming the world.
      search: |
        Search around your current area, if you have the energy.

      store: |
        Go to the store, if there's one in your area.


commands:
  # strings used in commands
  look:
    warn_moving: |
      **You are about to move locations!**

    roaming:
      on: |
        You are currently roaming.
      off: |
        You are not roaming.
      force_off: |
        You cannot roam right now.
      effect: |
        The experience of roaming has put you in a good mood, giving you a status effect.
      strange: |
        The strange nature of the environment around you unsettles you slightly.

    energy:
      none: |
        You're too tired to do anything. (no energy)
      # 'peril' is <=4 energy
      peril: |
        You feel exhausted. ({AMOUNT} energy)
      # 'warn' is <=10 energy
      warn: |
        You feel tired. ({AMOUNT} energy)
      # 'ok' is <=20 energy
      ok: |
        You're feeling fine. ({AMOUNT} energy)
      # 'good' is <=40 energy
      good: |
        You feel good about your adventure. ({AMOUNT} energy)
      # 'plenty' is <=60 energy
      plenty: |
        You have plenty of energy. ({AMOUNT} energy)
      # 'lots' is >60 energy
      lots: |
        You have a lot of energy today. ({AMOUNT} energy)

    places:
      header: "Places"

      shop: "\U0001F6D2 Shop"
      center: "\U0001F3E5 PokéBlob Center"
      gym: "\U0001F3DF PokéBlob Gym"

      none: "None of interest."

    weather:
      header: "Weather"

      # represents weather, uses a lot of emoji (keep emoji where possible)
      cold: "\u2744 Cold"
      cold_rain: "\U0001F328 Snowing"
      cool: "\U0001F325 Cool"
      cool_rain: "\U0001F326 Cool, raining"
      moderate: "\u26C5 Moderate"
      moderate_rain: "\U0001F327 Moderate, raining"
      warm: "\U0001F324 Warm"
      warm_rain: "\U0001F327 Warm, raining"
      hot: "\u2600 Hot"

      light_breeze: "\U0001F4A8 Light Breeze"
      moderate_breeze: "\U0001F4A8 Moderate Breeze"
      strong_breeze: "\U0001F4A8 Strong Breeze"
      fast_winds: "\U0001F32A Fast Winds"

    names:
      header: Location
      unknown: "???"
      # names are constructed of two parts, one part is chosen randomly and is randomly inserted into the second part
      # these are lists, you can add or remove entries, but the dashes must stay in line
      first:
        - Blob
        - Council
        - Artisan
        - Wolfiri
        - Luma
        - Devon
        - Zeboto
        - Dropheart
        - Lyrus
        - Petal
        - Lavender
        - Orange
        - Lumiose
        - Glitz
        - Mahogany
        - New Bark
        - Vermillion
        - Viridian
        - Hearthorne
        - Lilycove
        - Kannagi
        - Acorn
        - Cliffside
        - Lakeside
        - Chroma
        - Triangle
        - Azure
        - Lazuli
        - Eterna
        - Elm
        - Oak
        - Cedar
        - Maple
        - Pine
        - Cypress
        - Fir
        - Hemlock
        - Ash
        - Aspen
        - Birch
        - Hickory
        - Ironwood
        - Teak
        - Willow
        - Palm
        - Cherry
        - Dragonfruit
        - Fig
        - Grape
        - Lemon
        - Mango
        - Peach
      # second part, 'FIRST' is first part
      # as these contain braces and are not folded scalars, they must be in quotes
      second:
        - "{FIRST} Road"
        - "{FIRST} Town"
        - "Route to {FIRST} Town"
        - "{FIRST} Grove"
        - "{FIRST} Gulch"
        - "{FIRST} Valley"
        - "{FIRST} Way"
        - "{FIRST} City"
        - "Route to {FIRST} City"
        - "{FIRST} Citadel"
        - "Route to {FIRST} Citadel"
        - "{FIRST} Highway"
        - "{FIRST} Plains"
        - "{FIRST} Village"
        - "Route to {FIRST} Village"
        - "{FIRST} Island"
        - "{FIRST} Forest"
        - "{FIRST} Street"
        - "{FIRST} Meadow"
        - "{FIRST} Desert"
        - "{FIRST} Lake"
        - "{FIRST} Peninsula"
        - "{FIRST} Avenue"
        - "{FIRST} Boulevard"
        - "{FIRST} Canyon"
        - "{FIRST} Dale"
        - "{FIRST} Falls"
        - "{FIRST} Manor"
        - "{FIRST} Overpass"
        - "{FIRST} Ridge"

  roam:
    start: |
      You are now in roaming mode. You'll move locations and consume energy passively every 15 minutes (use `{PREFIX}look` to check where you are)
    # 'on' displays when the user tries to roam but already is roaming
    on: |
      You are already in roaming mode.
    # 'out' displays when the user has no energy but switches to roaming mode anyway
    out: |
      You are now in roaming mode. You won't move anywhere without energy, but once you have energy, you'll passively consume it to move locations. (use `{PREFIX}look` to check where you are)
    stop: |
      You are no longer roaming, and your roaming effects will wear off in a couple minutes. (use `{PREFIX}look` to see what's here)
    stop_no_effect: |
      You are no longer roaming. (use `{PREFIX}look` to see what's here)
    # 'off' displays when the user tries to stop roaming but already isn't
    off: |
      You aren't currently going anywhere.

  search:
    busy: |
      You're busy doing something else right now. Finish that first.
    no_energy: |
      You're too tired to search right now.

    # message when the user has just searched, while waiting for result
    search_wait: |
      {USER} searches the nearby area and finds..
    search_lost: |
      {USER} searches the nearby area and finds.. themselves lost. How did you even get here?
      You have {ENERGY} energy remaining.
    search_nothing: |
      {USER} searches the nearby area and finds.. nothing.
      You have {ENERGY} energy remaining.
    search_coin: |
      {USER} searches the nearby area and finds.. {AMOUNT} {COINEMOJI}!
      You now have {TOTAL} {COINEMOJI} and {ENERGY} energy remaining.
    search_coin_strange: |
      {USER} searches the nearby area and finds.. {AMOUNT} {COINEMOJI}!
      {AMOUNT, plural, one{It appears} other{They appear}} to be many years old, but {AMOUNT, plural, one{it's} other{they're}} still legal tender. Probably.
      You now have {TOTAL} {COINEMOJI} and {ENERGY} energy remaining.
    search_blob:
      prompt: |
        {USER} searches the nearby area and finds.. {CLASS} {BLOB}!
        You have {ENERGY} energy remaining.

        {CATCHOPTS}
      prompt_strange: |
        {USER} searches the nearby area and finds.. {CLASS} {BLOB}, seemingly abandoned.
        You have {ENERGY} energy remaining.

        {CATCHOPTS}
      # catch_default is used when the user only has one type of ball.
      catch_default: |
        Type `{PREFIX}catch` to use {BALL}.
      catch_multi: |
        Type `{PREFIX}catch {BALLNAME}` to use {BALL}.
      # catch_remain is the last in the list of multiple choices, detailing the default.
      catch_remain: |
        Or type `{PREFIX}catch` to use {BALL}.
      catch_nope: |
        Sadly, as you have no PokéBalls, you have no choice but to let this blob run away.
      leave: |
        `{PREFIX}ignore` to let the blob run away.
      continue: |
        `{PREFIX}search` to search again.
    retry_blob:
      prompt:
        - |
          {USER} Oh no! The {BLOB} broke free!

          {CATCHOPTS}
        - |
          {USER} Argh! The {BLOB} broke free!

          {CATCHOPTS}
        - |
          {USER} Shoot, the {BLOB} broke free! It was so close too!

          {CATCHOPTS}
    after_blob:
      run: |
        The {BLOB} runs away.
      disappeared: |
        The {BALL} you should have had has disappeared from you. Did it get used somewhere?
      caught: |
        {USER} Yes! You caught {NAME} the {BLOB}!

  store:
    busy: |
      You're too busy to go searching for stores. Finish whatever you're doing first.
    none_roaming: |
      Where? I don't see one. Did you just roam away from one? (`{PREFIX}stay` to stop roaming.)
    none: |
      Where? I don't see one. You should probably go somewhere with a store before trying to buy things. (`{PREFIX}roam` to start roaming.)

    strange: |
      While there is a store here, it looks to be in disrepair, and nobody is around to tend to it.

    enter: |
      You look around the shop.
    effect: |
      Your good mood from roaming rubs off onto the store owner, giving you a marginal discount on some items.
    coins: |
      You have {AMOUNT} {COINEMOJI}.
    
    warn_moving: |
      **You are about to move locations!**
    warn_effect: |
      **You are about to lose your roaming effect!**

    # how the item is listed in the store
    listing: |
      **{ITEM}**: {AMOUNT} {COINEMOJI}

    buy_help: |
      `{PREFIX}store buy [item] <amount>` lets you buy an item from the store.
    sell_help: |
      `{PREFIX}store sell [item] <amount>` lets you sell items you have.

    unsure_buy: |
      I'm not sure what you're trying to buy.
    unsure_sell: |
      I'm not sure what you're trying to sell.

    no_match_buy: |
      I don't think I know of such an item.
    no_match_sell: |
      I don't think I know of such an item.

    no_stock: |
      I don't think that's in stock here.

    # if a user tries to buy 0 of something
    no_zero_buy:
      - |
        You buy 0 of your desired item. It goes nicely with your 0 confidence and 0 sense.
      - |
        Your bank won't be happy if they find out you've been on one of those nothing-buying sprees again.
      - |
        Good idea! You've been running low on nothings recently.
      - |
        No time for window shopping!
    # if a user tries to buy less than 0 of something
    no_negative_buy: |
      If you want coins for your items, you should probably sell them (`{PREFIX}store sell [item] <amount>`)
    # ditto for sell
    no_negative_sell: |
      If you want items for your coins, you should probably buy things (`{PREFIX}store buy [item] <amount>`)

    no_money: |
      I don't think you can afford that.
    # if a user can afford an item, but doesn't have enough money for the amount they're quoting
    no_money_mass: |
      I don't think you can afford that many.

    confirm_buy:
      message: |
        Are you sure you want to buy {ITEM} for {COST} {COINEMOJI}?
      confirm: |
        `{PREFIX}confirm` to confirm
      cancel: |
        `{PREFIX}cancel` to cancel

    no_complete:
      buy: |
        The transaction could not be completed. Do you have the necessary funds?
      sell: |
        The transaction could not be completed. Do you have the necessary items?

    complete: |
      The transaction was completed. You now have {CURRENCY} {COINEMOJI}.

    no_have_item: |
      You don't seem to have that item.

    not_enough_item: |
      You don't seem to have as much of that item as you're offering.

    no_zero_sell:
      - |
        You successfully sell absolutely nothing, making a profit of absolutely nothing.
      - |
        You'd love to, but the nothing-to-nothing exchange rate has been insane recently.

    confirm_sell:
      message: |
        Are you sure you want to sell {ITEM} for {GAIN} {COINEMOJI}?
      confirm: |
        `{PREFIX}confirm` to confirm
      cancel: |
        `{PREFIX}cancel` to cancel

  locale:
    none: |
      You must supply a locale name.
    same: |
      You are already set to this locale.
    notfound: |
      That locale couldn't be found.
    changed: |
      The guild locale has been changed. Use `{PREFIX}locale [name]` at any time to change back.

blobs:
  # how an amount of a blob should appear in screens; meta, trade, etc
  plural: |
    {AMOUNT, plural, =0{} other{#x }}{BLOB}

  # change these!!
  names:
    - |
      Placeholder 1
    - |
      Placeholder 2


rarity:
  # names of the rarity levels
  # STATE is singular if attached for a singular noun (*a legendary* blob), etc
  legendary: |
    {STATE, select, singular{a } other{}}legendary
  rare: |
    {STATE, select, singular{a } other{}}rare
  uncommon: |
    {STATE, select, singular{an } other{}}uncommon
  common: |
    {STATE, select, singular{a } other{}}common


item:
  # item related data
  ball:
    # ball items
    basic:
      name: |
        {AMOUNT, select, mass{Basic Balls} singular{a Basic Ball} concept{Basic Ball} other{{AMOUNT, plural, =0{no Basic Balls} one{1 Basic Ball} other{# Basic Balls}}}}
      description: |
        Basic blob capture device. Good for common blobs, struggles on rarer types.

    great:
      name: |
        {AMOUNT, select, mass{Great Balls} singular{a Great Ball} concept{Great Ball} other{{AMOUNT, plural, =0{no Great Balls} one{1 Great Ball} other{# Great Balls}}}}
      description: |
        A step up from the Basic Ball, great on common blobs and decent on rare blobs.

    ultra:
      name: |
        {AMOUNT, select, mass{Ultra Balls} singular{an Ultra Ball} concept{Ultra Ball} other{{AMOUNT, plural, =0{no Ultra Balls} one{1 Ultra Ball} other{# Ultra Balls}}}}
      description: |
        A more powerful Ball that offers a great chance for all blobs.

    master:
      name: |
        {AMOUNT, select, mass{Master Balls} singular{a Master Ball} concept{Master Ball} other{{AMOUNT, plural, =0{no Master Balls} one{1 Master Ball} other{# Master Balls}}}}
      description: |
        The gold standard, catches blobs almost every time.

    aqua:
      name: |
        {AMOUNT, select, mass{Aqua Balls} singular{an Aqua Ball} concept{Aqua Ball} other{{AMOUNT, plural, =0{no Aqua Balls} one{1 Aqua Ball} other{# Aqua Balls}}}}
      description: |
        A ball that performs twice as well in rainy conditions.

    gale:
      name: |
        {AMOUNT, select, mass{Gale Balls} singular{a Gale Ball} concept{Gale Ball} other{{AMOUNT, plural, =0{no Gale Balls} one{1 Gale Ball} other{# Gale Balls}}}}
      description: |
        A ball that performs twice as well in strong winds.

    calm:
      name: |
        {AMOUNT, select, mass{Calm Balls} singular{a Calm Ball} concept{Calm Ball} other{{AMOUNT, plural, =0{no Calm Balls} one{1 Calm Ball} other{# Calm Balls}}}}
      description: |
        A ball that performs twice as well when the air is calm.

    desert:
      name: |
        {AMOUNT, select, mass{Desert Balls} singular{a Desert Ball} concept{Desert Ball} other{{AMOUNT, plural, =0{no Desert Balls} one{1 Desert Ball} other{# Desert Balls}}}}
      description: |
        A ball that performs twice as well in hot temperatures.

    improbability:
      name: |
        {AMOUNT, select, mass{Improbability Balls} singular{an Improbability Ball} concept{Improbability Ball} other{{AMOUNT, plural, =0{no Improbability Balls} one{1 Desert Ball} other{# Improbability Balls}}}}
      description: |
        Never fails.

  regen:
    # items that regen

    # generic regen description
    description: |
      Regenerates {RECOVER} energy.
    # generic use message
    use_message: |
      {USER} used their {ITEM}, regenerating {RECOVER} energy.

    # item names
    spikey_fruit: |
      {AMOUNT, select, mass{Spikey Fruit} singular{a Spikey Fruit} concept{Spikey Fruit} other{{AMOUNT, plural, =0{no Spikey Fruit} one{1 Spikey Fruit} other{# Spikey Fruit}}}}
    pudding: |
      {AMOUNT, select, mass{Puddings} singular{a Pudding} concept{Pudding} other{{AMOUNT, plural, =0{no Puddings} one{1 Pudding} other{# Puddings}}}}
    sugar_cube: |
      {AMOUNT, select, mass{Sugar Cubes} singular{a Sugar Cube} concept{Sugar Cube} other{{AMOUNT, plural, =0{no Sugar Cubes} one{1 Sugar Cube} other{# Sugar Cubes}}}}

  lure:
    # lures
    blob:
      name: |
        {AMOUNT, select, mass{Blob Lures} singular{a Blob Lure} concept{Blob Lure} other{{AMOUNT, plural, =0{no Blob Lure} one{1 Blob Lure} other{# Blob Lures}}}}
      description: |
        Increases the chance of finding a blob for the next 10 searches.
      use_message: |
        {USER} used {ITEM}, their next 10 search attempts will have an increased chance of finding a blob.


effect:
  # effect-related data
  blob_lure:
    name: |
      Blob Lure
